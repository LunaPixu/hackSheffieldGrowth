<img class="@bg" src="@_Sprite" alt="@_AltText" @onclick="ClickCell" />

@code {
  [Parameter]
  public required int age { get; set; }
  [Parameter]
  public required string bg { get; set; }
  [Parameter]
  public required (int row, int col) coords { get; set; }
  [Parameter]
  public EventCallback<(int row, int col,int newVal)> Clicked { get; set; }

  private string _Sprite;
  private string _AltText;

  private void RenderTree()
  {
    switch (age) {
      case 1:
        _Sprite = "/images/seed.png";
        _AltText = "Seed";
        break;
      case 2:
        _Sprite = "/images/sapling.png";
        _AltText = "Sapling";
        break;
      case 3:
        _Sprite = "/images/immature.png";
        _AltText = "Immature Tree";
        break;
      case 4:
        _Sprite = "/images/tree.png";
        _AltText = "Tree";
        break;
      case -1:
        _Sprite = "/images/dead.png";
        _AltText = "Dead Tree";
        break;
      case 0: default:
        _Sprite = "/images/empty.png";
        _AltText = "Empty Space";
        break;
    }
  }

  async private Task ClickCell()
  {
    if (age == 0) { // If cell is empty, signal to plant a seed
      await Clicked.InvokeAsync((coords.row, coords.col, 1));
    }
    else if (age == 3 || age == 4) { // If cell has a proper tree, signal to chop it down
      await Clicked.InvokeAsync((coords.row, coords.col, 0));
    }
  }

  // When initialised or updated from main page, render
  protected override void OnInitialized() => RenderTree();
  protected override void OnParametersSet() => RenderTree();
}